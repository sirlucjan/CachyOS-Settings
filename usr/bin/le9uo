#!/bin/bash

# Check if the script is run with root privileges
if [ "$(id -u)" -ne 0 ]; then
  echo "Error: This script must be run with root privileges."
  exit 1
fi

file_path="/sys/kernel/mm/lru_gen/enabled"

# Display usage information if no arguments are provided
if [ "$#" -eq 0 ]; then
  echo "Usage: $0 [--enable|-e|--disable|-d]"
  echo "  --enable , -e :  Enable the feature"
  echo "  --disable, -d : Disable the feature"
  exit 1
fi

if [ ! -e /proc/sys/vm/anon_min_ratio ]; then
  echo "Your kernel does not contain the le9uo patch set" >&2
  echo "Please install a kernel with le9uo support before using this script" >&2
  exit 1
fi

# Determine the desired state based on the argument
case "$1" in
  --enable | -e)
    ## Set lv4 values for low memory protection
    ## There can be found a different preset in /etc/sysctl.d/99-le9uo-example.conf
    echo "Setting lv4 for low memory protection..."
    sysctl -w vm.anon_min_ratio=15
    sysctl -w vm.clean_low_ratio=0
    sysctl -w vm.clean_min_ratio=15
    ## Disable MG-LRU, requirement for le9uo memory protection
    echo "Disabling Multi-Generational LRU..."
    new_state="n"
    ;;
  --disable | -d)
    echo "Enabling Multi-Generational LRU..."
    new_state="y"
    ;;
  *)
    echo "Error: Invalid argument. Use --enable, -e, --disable, or -d."
    exit 1
    ;;
esac

# Write the new state to the file
echo "$new_state" | tee "$file_path" > /dev/null
echo "$file_path = $new_state"

# Exit the script
exit 0

